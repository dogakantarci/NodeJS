// test/models/User.test.js
const sinon = require('sinon');
const User = require('../../src/models/User'); // User modelinizi buradan import edin

// Bcrypt bağımlılığını mocklamak için stub'lar oluşturun
const bcryptStub = {
    genSalt: sinon.stub().returns(Promise.resolve('salt')),
    hash: sinon.stub().returns(Promise.resolve('hashedPassword123')),
    compare: sinon.stub().returns(Promise.resolve(true))
};

// Bcrypt'i mocklayın
const bcrypt = require('bcryptjs');
sinon.stub(bcrypt, 'genSalt').callsFake(() => bcryptStub.genSalt());
sinon.stub(bcrypt, 'hash').callsFake(() => bcryptStub.hash());
sinon.stub(bcrypt, 'compare').callsFake(() => bcryptStub.compare());

describe('User Model', () => {
    let userData;

    beforeEach(() => {
        userData = {
            username: 'testUser',
            password: 'password123'
        };
    });

    afterEach(() => {
        sinon.restore(); // Her testten sonra stub'ları geri al
    });

    it('should create a user successfully', async () => {
        const user = new User(userData);
        const savedUser = await user.save(); // save çağrıldığında hash fonksiyonu çalışacak

        expect(savedUser.username).toEqual(userData.username);
        expect(savedUser.password).not.toEqual(userData.password); // Şifre hashlendi mi?
    });

    it('should hash the password before saving', async () => {
        const user = new User(userData);
        await user.save(); // save çağrıldığında hash fonksiyonu çalışacak

        // Mocklanan bcrypt fonksiyonlarının çağrıldığını kontrol et
        sinon.assert.calledOnce(bcryptStub.genSalt);
        sinon.assert.calledOnce(bcryptStub.hash);
        expect(user.password).toEqual('hashedPassword123'); // Şifre hashlendi mi?
    });

    it('should return true if password matches', async () => {
        const user = new User(userData);
        await user.save(); // save çağrıldığında hash fonksiyonu çalışacak

        const isMatch = await user.comparePassword('password123'); // Doğru şifreyi kontrol et
        expect(isMatch).toBe(true); // Şifre doğru mu?
        sinon.assert.calledOnce(bcryptStub.compare); // comparePassword çağrıldı mı?
    });
});
