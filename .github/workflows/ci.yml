name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Kodun checkout edilmesi
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: ./NodeJS/LibraryAppV2

    # Node.js kurulumunun yapılması
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Proje için kullandığınız Node.js versiyonunu burada belirtin

    # Bağımlılıkların kurulması
    - name: Install dependencies
      run: npm install

    # Testlerin çalıştırılması
    - name: Run tests
      run: npm test

    # Build işlemi (opsiyonel, projenizde bir build aşaması varsa)
    - name: Build project
      run: npm run build  # Eğer build aşaması yoksa bu satırı çıkarabilirsiniz

    # NPM authentication yapılandırması
    - name: Set up NPM authentication
      run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

    # GitHub token'ının ortam değişkenine eklenmesi
    - name: Set up GitHub authentication
      run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV

    # Semantic-release'ın çalıştırılması
    - name: Run semantic-release
      run: npx semantic-release
      env:
        CI: true  # Bu ortam değişkeni dry-run modunu geçer
        GH_TOKEN: ${{ secrets.GH_TOKEN }} # GitHub token ile erişim sağlanır
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # NPM token ile paketleri dağıtabilirsiniz

    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to production..."
        # deploy işlemleri